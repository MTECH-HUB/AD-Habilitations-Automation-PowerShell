<#
.SYNOPSIS
    Script de test pour valider l'installation et le fonctionnement du syst√®me

.DESCRIPTION
    Ce script effectue des tests de base pour v√©rifier que tous les composants
    sont correctement install√©s et configur√©s.
#>

# Importation des modules requis
try {
    Import-Module ActiveDirectory -ErrorAction Stop
    Write-Host "‚úÖ Module ActiveDirectory import√© avec succ√®s" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur d'importation du module ActiveDirectory : $_" -ForegroundColor Red
    exit 1
}

try {
    Import-Module (Join-Path $PSScriptRoot "..\Config\AD-Functions.psm1") -ErrorAction Stop
    Write-Host "‚úÖ Module AD-Functions import√© avec succ√®s" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur d'importation du module AD-Functions : $_" -ForegroundColor Red
    exit 1
}

# Test de configuration
$configPath = Join-Path $PSScriptRoot "..\Config\settings.json"
if (Test-Path $configPath) {
    try {
        Get-Content $configPath | ConvertFrom-Json | Out-Null
        Write-Host "‚úÖ Configuration charg√©e avec succ√®s" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erreur de lecture de la configuration : $_" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Fichier de configuration manquant : $configPath" -ForegroundColor Red
}

# Test de connectivit√© AD
Write-Host "`nüîç Test de connectivit√© Active Directory..." -ForegroundColor Cyan
$adTest = Test-ADConnectivity
if ($adTest.Success) {
    Write-Host "‚úÖ Connectivit√© AD valid√©e" -ForegroundColor Green
    Write-Host "   Domaine : $($adTest.Domain)" -ForegroundColor White
    Write-Host "   Contr√¥leur : $($adTest.DomainController)" -ForegroundColor White
} else {
    Write-Host "‚ùå Erreur de connectivit√© AD : $($adTest.Error)" -ForegroundColor Red
}

# Test des chemins
Write-Host "`nüìÅ V√©rification de la structure des dossiers..." -ForegroundColor Cyan
$paths = @(
    (Join-Path $PSScriptRoot "..\Config"),
    (Join-Path $PSScriptRoot "..\Logs"),
    (Join-Path $PSScriptRoot "..\Reports"),
    (Join-Path $PSScriptRoot "..\Templates"),
    (Join-Path $PSScriptRoot "..\Tests")
)

foreach ($path in $paths) {
    if (Test-Path $path) {
        Write-Host "‚úÖ $path" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $path (manquant)" -ForegroundColor Red
        try {
            New-Item -Path $path -ItemType Directory -Force | Out-Null
            Write-Host "   ‚Üí Dossier cr√©√©" -ForegroundColor Yellow
        } catch {
            Write-Host "   ‚Üí Erreur de cr√©ation : $_" -ForegroundColor Red
        }
    }
}

# Test des scripts principaux
Write-Host "`nüìú V√©rification des scripts..." -ForegroundColor Cyan
$scripts = @(
    "AD-UserManagement.ps1",
    "AD-RightsAudit.ps1",
    "AD-MainMenu.ps1"
)

foreach ($script in $scripts) {
    $scriptPath = Join-Path $PSScriptRoot $script
    if (Test-Path $scriptPath) {
        Write-Host "‚úÖ $script" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $script (manquant)" -ForegroundColor Red
    }
}

# Test de g√©n√©ration de mot de passe
Write-Host "`nüîê Test de g√©n√©ration de mot de passe..." -ForegroundColor Cyan
try {
    $password = New-SecurePassword -Length 12
    if ($password.Length -eq 12) {
        Write-Host "‚úÖ G√©n√©ration de mot de passe OK" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Longueur de mot de passe incorrecte" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erreur de g√©n√©ration de mot de passe : $_" -ForegroundColor Red
}

# Test de validation des donn√©es
Write-Host "`n‚úÖ Test de validation des donn√©es..." -ForegroundColor Cyan
$testUserData = @{
    SamAccountName = "test.user"
    GivenName = "Test"
    Surname = "User"
    UserPrincipalName = "test.user@contoso.local"
}

try {
    $errors = Test-UserData -UserData $testUserData
    if ($errors.Count -eq 0) {
        Write-Host "‚úÖ Validation des donn√©es OK" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Erreurs de validation d√©tect√©es (normal pour les tests)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Erreur de validation : $_" -ForegroundColor Red
}

Write-Host "`nüéâ Tests termin√©s !" -ForegroundColor Green
Write-Host "üìã Pour d√©marrer le syst√®me, ex√©cutez : .\Scripts\AD-MainMenu.ps1" -ForegroundColor Cyan
